type AudioData {
    _id: String!
    userId: String!
    title: String!
    artist: String!
    album: String
    duration: Float!
    dataformat: String!
    playlistId: String
}

type AudioFile {
    _id: String!
    audioId: String!
    file: String!
}

type AudioCoverImage {
    _id: String!
    audioId: String!
    file: String!
}

type AudioPlaylist {
    _id: String!
    audioId: [String]
}

extend type Mutation {
    insertAudioContent(title: String!, artist: String!, album: String, duration: Float!, dataformat: String!, audioFile: String!, coverImage: String!): AudioData
}

extend type Query {
    # audioData(_id: String!): AudioData
    # audioFile(audioId: String!): AudioFile
    # audioCoverImage(audioId: String!): AudioCoverImage
    audioCoverImages: [AudioCoverImage]
    # songsData: [AudioData]
}