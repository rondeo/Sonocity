type AudioData {
    _id: String!
    userId: String!
    title: String!
    artist: String!
    album: String
    duration: Float!
    dataformat: String!
    playlistId: String
    fileUrl: String!
}

# type AudioFile {
#     _id: String!
#     audioId: String!
#     file: String!
# }

type AudioCoverImage {
    _id: String!
    audioId: String!
    file: String!
    dataformat: String!
}

# type AudioPlaylist {
#     _id: String!
#     audioId: [String]
# }

extend type Mutation {
    insertAudioContent(title: String!, artist: String!, album: String, duration: Float!, dataformat: String!, fileUrl: String!, coverImage: String!, imgMimeType: String!): AudioData
}

extend type Query {
    # audioFile(audioId: String!): AudioFile
    audioCoverImage(audioId: String!): AudioCoverImage
    #allAudioCover: [AudioCoverImage]
    audioData(audioId: String!): AudioData
    allAudioId: [AudioData]
}